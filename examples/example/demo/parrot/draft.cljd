(ns example.demo.parrot.draft)

(comment
  (mxu/counts-dump :pre-geo)
  (mxu/counts-reset)

  (defn stop-button []
    (ignore-pointer {:ignoring (cF (= :off (app-fts-status)))}
      (opacity {:opacity (cF (if (= :off (app-fts-status))
                               0.15 1.0))}
        (column {:mainAxisSize      m/MainAxisSize.min
                 :mainAxisAlignment m/MainAxisAlignment.center}
          (icon-button
            {:key         (m/ValueKey "FTS-STOP")
             :icon        (fx/icon m/Icons.stop)
             :iconSize    48
             :color       m/Colors.red #_(cF (if (mav :ignoring)
                                               (.-shade50 m/Colors.pink)
                                               m/Colors.red))
             :splashColor m/Colors.redAccent
             :onPressed   (fn [] (fts-stop me))})))))

  (defn auto-play []
    (fx/sized-box {:width 180}
      (checkbox-list-tile
        {:controlAffinity m/ListTileControlAffinity.leading
         :title           (m/Text "Auto-play")
         :value           (cI false :watch (fn [_ me new prior _]
                                             (when (mx-bound? prior)
                                               (when (and new
                                                       (= :off (app-fts-status)))
                                                 (fts-speak me)))))
         :onChanged       (cF #(wmx-iso (mset! me :value %)))}
        {:name :auto-play})))

  (.setProgressHandler
    (fn [text startOffset endOffset word]
      (wmx-iso
        (mset! me
          :progress {:full-text   text
                     :word        word
                     :word-offset startOffset
                     :word-end    endOffset}))))

  ;=== One word chyron ===========================

  (defn chyron []
    (container
      {:padding (m/EdgeInsets.symmetric .horizontal 16.0)}
      (fx/text {:textAlign m/TextAlign.center
                :style     (p/TextStyle .color m/Colors.black
                             .fontSize 18.0)}
        (or (:word (app-fts-progress)
              "*waiting*")))))

  ; === multi word chyron ----------------------------------------------------

  (defn chyron []
    (container
      {:padding (m/EdgeInsets.symmetric .horizontal 16.0)}
      (fx/text {:textAlign m/TextAlign.center}
        {:phrase (cF+ [:sst nil]
                   (when (not= :off (app-fts-status))
                     (let [{:keys [word]} (app-fts-progress)]
                       (if (nil? word) []
                         (take-last 5
                           (concat (if (mx-bound? _cache) _cache [])
                             [word]))))))}
        (str/join "..." (mget me :phrase)))))

  ;;; === rate limit speech skip =================================

  (row {:mainAxisAlignment m/MainAxisAlignment.spaceEvenly}
    (auto-play)
    (rate-limit?))

  ;; fin
  (defn stop-button []
    (ignore-pointer {:ignoring (cF (or (= :off (app-fts-status))
                                     (and (muv :rate-limit?)
                                       (let [{:keys [full-text word-end]}
                                             (app-fts-progress)]
                                         (< word-end (* 0.25 (count full-text)))))))}
      (opacity {:opacity (cF (if (mav :ignoring) 0.15 1.0))}
        (speaking-control m/Colors.red m/Colors.redAccent m/Icons.stop "STOP" fts-stop))))
  )





