(ns example.demo.angel.stt.core
  (:require
    ["package:flutter/material.dart" :as m]
    ["package:flutter/painting.dart" :as p]
    ["package:flutter/widgets.dart" :as w]
    ;
    ["package:speech_to_text/speech_to_text.dart" :as stt]
    ["package:speech_to_text_platform_interface/speech_to_text_platform_interface.dart" :as sttpi]
    ["package:speech_to_text/speech_recognition_error.dart" :as stte]
    ["package:speech_to_text/speech_recognition_result.dart" :as sttr]

    [clojure.string :as str]
    [tilton.mx.api :as mx
     :refer [dp dpx cI cF cF+ cF+n cFn cFonce mget mget? mset! mswap! minfo fasc fasc-inc
             fmu muv fm* mav mx-bound? wmx-iso]]
    [tilton.fmx.api :as fx
     :refer [scaffold app-bar text center column hero material-app
             container row expanded icon padding opacity ignore-pointer
             checkbox-list-tile icon-button fx-render dart-cb]]
    [example.demo.angel.stt.common :as cmn]))

; todo: move to mx api
(defmacro try-wmx-iso [& body]
  `(try
     (tilton.mx.api/wmx-iso ~@body)
     (catch Exception e#
       (dp :FLUTTERCATCH!! e#))))

(defn sp-initializer-rule []
  (cF+ [:async? true
        :watch (fn [_ me new _ _]
                 (dpx :initialized? new)
                 (when new
                   (dpx :post-init-avail (.-isAvailable cmn/STT))
                   (dpx :post-init-listening (.-isListening cmn/STT))
                   (dpx :post-init-has-error (.-hasError cmn/STT))
                   (when new
                     (try-wmx-iso
                       (mset! me :sp-status :available)))))]
    (.initialize cmn/STT
      .onStatus (fn [status]
                  (try-wmx-iso
                    (dp :onStatus-sets-status (keyword status))
                    (mset! me :sp-status (keyword status))))
      .onError (fn [^stte/SpeechRecognitionError err]
                 (dp :sp-error!!!!! (.-errorMsg err))
                 (try-wmx-iso
                   (mset! me :transcript (str "Error: " (.-errorMsg err))))))))

(defn stop-listening [me]
  (dpx :requesting-stop)
  (.stop cmn/STT))


